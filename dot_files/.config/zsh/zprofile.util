export LOOP_EXEC_MAX_COUNT=50
export CAREFUL_SYNC_OPTS='--exclude=".*"'

# {{{ careful_sync

function _loop_exec()
{
    if [ $# -ne 2 ]; then
        echo 'invalid argument. do not call this function by user'
        return 1
    fi

    if [ $2 -gt $LOOP_EXEC_MAX_COUNT ]; then
        echo "loop_exec was executed \"${1}\" ${LOOP_EXEC_MAX_COUNT} times. exit."
        return 1
    fi

    eval "$1"

    if [ $? -ne 0 ]; then
        echo "exit status was not 0. retry command... ($2)"
        _loop_exec "$1" $(expr $2 + 1)
    fi
}

function loop_exec() {
    if [ $# -ne 1 ]; then
        echo 'Usage : loop_exec {loop_exec_command}'
        echo 'argument must be single. if command has argument, please quote.'
        return 1
    fi

    _loop_exec "$1" 1
}

function careful_sync {
    if [ $# -lt 2 -o $# -gt 3 ]; then
        echo 'Usage : careful_sync <rsync-additional-opts> <source-dir> <destination-dir>'
        return 1
    fi

    if [ $# -eq 2 ]; then
        local rsync_opts=''
        local source=$1
        local destination=$2
    elif [ $# -eq 3 ]; then
        local rsync_opts=$1
        local source=$2
        local destination=$3
    fi


    loop_exec "rsync -avx  ${CAREFUL_SYNC_OPTS} ${rsync_opts} '${source}' '${destination}'"

    if [ $? -ne 0 ]; then
        echo 'Failed synchronization without checksum validation. Validation skipped.'
        return 1
    fi
    loop_exec "rsync -acvx ${CAREFUL_SYNC_OPTS} ${rsync_opts} '${source}' '${destination}'"
}

# }}}

# {{{ compress_directory using rar

function compress_directory() {
    rar a -r -rr5 $1.rar $1
}

function archive_directory() {
    find . -name '*.db' -print0 | xargs -0 rm
    find . -name '.*'   -print0 | xargs -0 rm
    find . -name '_*'   -print0 | xargs -0 rm
    find . -type d -print0      | xargs -0 rmdir

    mkdir /tmp/original_files
    local dir
    for dir in *; do
        compress_directory "$dir" && mv "$dir" /tmp/original_files
    done
}

function rearchive_directory() {
    mkdir /tmp/original_archives
    local file
    for file in *; do
        unar -d "$file" && mv "$file" /tmp/original_archives
        local dirname="${file%.*}"
        mv "${dirname}"/**/*.* "${dirname}"
    done
    archive_directory
}

# }}}

# {{{ pip3-install

function pip3-install() {
    pip3 install --upgrade-strategy eager --progress-bar off --upgrade $1
    pip3 check $1
}

# }}}

# vim: set filetype=zsh:
