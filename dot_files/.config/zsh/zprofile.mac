export CP_HOME_DIR=$HOME/.config/cocoapods
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_NO_EMOJI=1
export RUBY_CONFIGURE_OPTS="--enable-shared --with-openssl-dir=/usr/local/opt/openssl@1.1"
# "brew --prefix openssl@1.1" is heavy. So set "--with-openssl-dir" directly. (More info: $ brew info ruby-build)

alias dsnow='pmset displaysleepnow'
alias grep-url='egrep -o "https?://[^ ]+"'
alias notification-banner-clear='terminal-notifier -remove ALL'
alias work='tmuxinator work'

alias alpine='docker-run-sandbox alpine'
alias alpine-ruby='docker-run-sandbox ruby:2.5.7-alpine sh'
alias alpine-ruby-latest='docker-run-sandbox ruby:2.7.0-alpine sh'
alias centos='docker-run-sandbox centos'
alias docker-hypervisor='docker run -it --rm --privileged --pid=host alpine'
alias docker-volumes-cleanup='docker volume ls -q | egrep "[0-9a-f]{64}" | xargs docker volume rm'

alias hubb='hub browse'
alias hubc='hub ci-status -v'
alias hubco='hub ci-status -v | grep-url | xargs open -a safari'

# {{{ check-holiday

function check-holiday() {
    ruby -e 'require "holiday_jp"; HolidayJp.holiday?(Date.today) ? puts("Today is holiday") : ""'
}

# }}}

# {{{ docker-run-sandbox

function docker-run-sandbox() {
    local name=`echo $1 | sed -e 's/:.*$//'`
    local target_running=`docker ps -q --filter "name=${name}"`

    if [ -z $target_running ]; then
        docker run --rm -it --name ${name} ${1} ${2}
    else
        docker run --rm -it ${1} ${2}
    fi
}

# }}}

# {{{ pbcopy-keychain

function pbcopy-keychain() {
    test $# -ne 1 && echo 'Please specify an item name.' && return 1
    security find-generic-password -s $1 >& /dev/null
    test $? -ne 0 && echo "Specified key($1) is not found."   && return 1

    security 2>&1 >/dev/null find-generic-password -ws $1 | pbcopy
}

# }}}

# {{{ title-from-url

function title-from-url {
    if [ $# -ne 1 ]; then echo 'Please specify the URL' 1>&2; return 1; fi
    if grep-url -v <<< $1 >& /dev/null; then echo "'$1' is not URL" 1>&2; return 1; fi
    local title=`curl -sL $1 | sed -e 's/<title[^>]*>/<title>/' | ggrep -oP "(?<=<title>)(.+)(?=</title>)" | head -1`

    if [ -n "${title}" ]; then
        echo $title
    else
        echo 'GET_TITLE_FAILRUED'
        return 1
    fi
}

# }}}

# {{{ url4md

function url4md {
    local title=`title-from-url $@`
    if [ -n "$title" ]; then echo "[${title}](${1})"; fi
}

# }}}

# {{{ url4tweet

function url4tweet {
    local title=`title-from-url $@`
    if [ -n "$title" ]; then echo "${title} ${1}"; fi
}

# }}}

# vim: set filetype=zsh:
