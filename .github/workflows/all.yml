name: Brew install + Check init script

on: [push, pull_request]

# https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners#supported-runners-and-hardware-resources

jobs:
  homebrew:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Remove pre-installed pod command
      run: rm '/usr/local/bin/pod'
    - name: Install formulas by homebrew + bundle
      run: |
        brew tap homebrew/bundle
        brew bundle
  ruby-alpine:
    runs-on: ubuntu-latest
    container: docker://alpine
    steps:
      - uses: actions/checkout@v2
      - name: Setup dependencies by apk
        run: apk add ruby ruby-dev make gcc libc-dev
      - name: Execute ruby-init.sh
        run: ./scripts/ruby-init.sh
      - name: Check ruby version and gems
        run: |
          ruby -v
          which pry kramdown
          gem list | grep neovim
  ruby-centos:
    runs-on: ubuntu-latest
    container: docker://centos
    steps:
      - uses: actions/checkout@v2
      - name: Setup dependencies by dnf
        run: dnf install -y which ruby ruby-devel make gcc redhat-rpm-config
      - name: Execute ruby-init.sh
        run: ./scripts/ruby-init.sh
      - name: Check ruby version and gems
        run: |
          ruby -v
          which pry kramdown
          gem list | grep neovim
  ruby-ubuntu:
    runs-on: ubuntu-latest
    container: docker://ubuntu
    steps:
      - uses: actions/checkout@v2
      - name: Setup dependencies by apt-get
        run: apt-get update && apt-get install -y ruby ruby-dev make gcc
      - name: Execute ruby-init.sh
        run: bash scripts/ruby-init.sh
      - name: Check ruby version and gems
        run: |
          ruby -v
          which pry kramdown
          gem list | grep neovim
  python-alpine:
    runs-on: ubuntu-latest
    container: docker://alpine
    steps:
      - uses: actions/checkout@v2
      - name: Setup dependencies by apk
        run: apk add python3 python3-dev gcc libc-dev
      - name: Execute python-init.sh
        run: ./scripts/python-init.sh
      - name: Check version and packages
        run: |
          python3 -V
          which aws sam
          pip3 list | grep pynvim
  python-centos:
    runs-on: ubuntu-latest
    container: docker://centos
    steps:
      - uses: actions/checkout@v2
      - name: Setup dependencies by dnf
        run: dnf install -y which python3
      - name: Execute python-init.sh
        run: ./scripts/python-init.sh
      - name: Check version and packages
        run: |
          python3 -V
          which aws sam
          pip3 list | grep pynvim
  python-ubuntu:
    runs-on: ubuntu-latest
    container: docker://ubuntu
    steps:
      - uses: actions/checkout@v2
      - name: Setup dependencies by apt-get
        run: apt-get update && apt-get install -y python3-pip
      - name: Execute python-init.sh
        run: bash scripts/python-init.sh
      - name: Check version and packages
        run: |
          python3 -V
          which aws sam
          pip3 list | grep pynvim
  node-alpine:
    runs-on: ubuntu-latest
    container: docker://alpine
    steps:
      - uses: actions/checkout@v2
      - name: Setup dependencies by apk
        run: apk add npm
      - name: Execute install.sh
        run: ./install.sh
      - name: Execute node-init.sh
        run: ./scripts/node-init.sh
      - name: Check packages
        run: |
          which tsc yarn
          npm list -g | grep neovim
  node-ubuntu:
    runs-on: ubuntu-latest
    container: docker://ubuntu
    steps:
      - uses: actions/checkout@v2
      - name: Setup dependencies by apt-get
        run: apt-get update && apt-get install -y npm
      - name: Execute install.sh
        run: bash install.sh
      - name: Execute node-init.sh
        run: bash scripts/node-init.sh
      - name: Check packages
        run: |
          which tsc yarn
          npm list -g | grep neovim
  neovim-alpine:
    runs-on: ubuntu-latest
    container: docker://alpine
    steps:
      - uses: actions/checkout@v2
      - name: Setup dependencies by apk
        run: apk add neovim curl git python3 python3-dev gcc libc-dev
      - name: Show neovim version
        run: nvim --version
      - name: Execute install.sh
        run: ./install.sh
      - name: Execute neovim-init.sh
        run: ./scripts/neovim-init.sh
      - name: Check packages
        run: |
          which nvim
          pip3 list | grep pynvim
          ls $HOME/.config/nvim/dein/repos/github.com/Shougo/dein.vim
          ls $HOME/.config/nvim/dein/repos/github.com | grep atton
          ls $HOME/.config/nvim/dein/repos/github.com | grep Shougo
          ls $HOME/.config/nvim/eskk/SKK-JISYO.L
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cleanup pre-installed docker images
        run: docker images -aq | xargs docker rmi
      - name: Execute docker-init.sh
        run: ./scripts/docker-init.sh
      - name: Check images
        run: |
          docker images | grep alpine
          docker images | grep centos
          docker images | grep fedora
          docker images | grep ubuntu
